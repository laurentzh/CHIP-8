with Instruction; use Instruction;
with Cpu; use Cpu;

procedure Main is
   Cpu : Chip8;
   Op : Opcode;
begin
   Cpu.Mem := (16#F0#, 16#90#, 16#90#, 16#90#, 16#F0#,
               16#20#, 16#60#, 16#20#, 16#20#, 16#70#,
               16#F0#, 16#10#, 16#F0#, 16#80#, 16#F0#,
               16#F0#, 16#10#, 16#F0#, 16#10#, 16#F0#,
               16#90#, 16#90#, 16#F0#, 16#10#, 16#10#,
               16#F0#, 16#80#, 16#F0#, 16#10#, 16#F0#,
               16#F0#, 16#80#, 16#F0#, 16#90#, 16#F0#,
               16#F0#, 16#10#, 16#20#, 16#40#, 16#40#,
               16#F0#, 16#90#, 16#F0#, 16#90#, 16#F0#,
               16#F0#, 16#90#, 16#F0#, 16#10#, 16#F0#,
               16#F0#, 16#90#, 16#F0#, 16#90#, 16#90#,
               16#E0#, 16#90#, 16#E0#, 16#90#, 16#E0#,
               16#F0#, 16#80#, 16#80#, 16#80#, 16#F0#,
               16#E0#, 16#90#, 16#90#, 16#90#, 16#E0#,
               16#F0#, 16#80#, 16#F0#, 16#80#, 16#F0#,
               16#F0#, 16#80#, 16#F0#, 16#80#, 16#80#,
               others => 0);
   loop
      Op := Fetch(Cpu);
      Execute(Cpu, Op);
   end loop;
end Main;
